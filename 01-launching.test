#!/bin/bash

# These tests verify the various ways to launch tests.
# Other command-line arguments are tested elsewhere.


# TODO: test missing file or directory names on the command line
# TODO: test what happens when I specify the same file multiple times

before:all() {
    # this is a little more readable
    run_tests="$tsk_framework_file"
}

test:execute_one_testfile() {
    cd "$(framework_dir)/fixtures/numbered"
    $run_tests one.test -f test
    stdout_is <<EOF
pass test:one
EOF
}

test:execute_multiple_testfiles() {
    # tests and testfiles are run in indeterminate order so we need to sort the output
    cd "$(framework_dir)/fixtures/numbered"
    $run_tests one.test two.test three.test --formatter=test | sort
    stdout_is <<EOF
pass test:one
pass test:three
pass test:two
EOF
}

test:launch_one_dir() {
    cd "$(framework_dir)/fixtures"
    $run_tests numbered -f test| sort
    stdout_is <<EOF
pass test:one
pass test:three
pass test:two
EOF
}

skip:launch_one_testfile() {
    ./one.test
}

skip:launch_multiple_testfiles() {
    ./one.test two.test three.test
}

skip:execute_testfiles_and_dirs() {
    ./one.test ../letters two.test
}

skip:launch_multiple_dirs() {
    run-tests letters numbers
}

skip:execute_stdio() {
    bash $tsk_framework_file - <<EOL
        test:run_test() { is_eq 1 1; }
EOL
}

skip:execute_stdio_multiple() {
    bash $tsk_framework_file one.test - <<EOL
        test:run_test() { is_eq 1 1; }
EOL
}

source "$(dirname "$BASH_SOURCE")/run-tests"
