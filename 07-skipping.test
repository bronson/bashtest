#!/bin/bash

# Tests all the ways to skip tests.
#
# TODO: before_all should be able to skip the entire testfile

before:all() {
    # this is a little more readable
    run_tests="$tsk_framework_file"
}

create_skip_test() {
    cat > skip.test <<EOF
        # this test is executed, not skipped
        test:nop() {
            is_eq 1 1
    	}

        # the test is skipped because of the function name
    	skip:skipped() {
    	    is_eq 1 2
    	}

        # a test is considered skipped if it doesn't do any assertions
    	test:no_asserts() {
    	    true
    	}

        # TODO: skip because of a keyword or something in the middle of a test?
        # test:skip_keyword() { skip; }
EOF
}

# verify the actual output from the command, don't use the test formatter
test:skip_functions() {
    create_skip_test
    $run_tests skip.test | sort
    stdout_is <<EOF
 01 skip   test:no_asserts
 02 pass   test:nop
 03 skip   skip:skipped
3 tests: 1 passed, 0 failed, 2 skipped.   1 assertion.
EOF
}

skip:skip_file() {
    touch skip-me.skip
    $run_tests | sort
    stdout_is <<EOF
EOF
}

source "$(dirname "$BASH_SOURCE")/run-tests"
